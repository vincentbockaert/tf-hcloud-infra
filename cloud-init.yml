#cloud-config
users:
  - name: ${username}
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: users, sudo
    home: /home/${username}
    shell: /bin/bash
    lock_passwd: true
    ssh_authorized_keys:
      - ${ssh_authorized_key}
# disable root over ssh
disable_root: true
disable_root_opts: no-port-forwarding,no-agent-forwarding,no-X11-forwarding



# disable ssh password authentication
ssh_pwauth: false

# update packages
package_update: true

fqdn: ${fqdn}

# SSH CA Certificates set up
# upload the ca private key and public key to the server
write_files:
  - path: /etc/ssh/HostCA
    encoding: b64
    owner: root:root
    permissions: '0600'
    content: ${HostCAPrivateKey}
  - path: /etc/ssh/HostCA.pub
    owner: root:root
    permissions: '0644'
    content: ${HostCAPublicKey}
# ssh host key signing with ca certificates
runcmd:
  # sign and configure ssh host keys
  - ssh-keygen -s /etc/ssh/HostCA -I "$(hostname)" -n "$(hostname -I|tr ' ' ',')$(hostname)" -V -5m:+520w -h /etc/ssh/ssh_host_rsa_key.pub /etc/ssh/ssh_host_ecdsa_key.pub /etc/ssh/ssh_host_ed25519_key.pub
  # configure ca usage on the server
  - echo "@cert-authority * $(cat /etc/ssh/HostCA.pub)" >> /etc/ssh/ssh_known_hosts
  # configure new signed host certificates
  - for i in /etc/ssh/ssh_host*_key-cert.pub; do echo "HostCertificate $i" >>/etc/ssh/sshd_config; done
  # remove the ca private key
  # in ideal scenario we would build a image in packer with presigned keys ... but Hetzner doesnt support image building afaik
  - rm -f /etc/ssh/HostCA
  # reload sshd to apply changes
  - systemctl reload sshd

